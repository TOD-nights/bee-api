
更新并重启后端服务：

cd /root/bee-api/bee-api && go build -o beeapi main.go
这个命令会编译 main.go 文件，并生成一个名为 beeapi 的可执行文件。适合构建发布版本，你可以将这个生成的二进制文件部署到服务器上运行。

go run main.go
这个命令会编译并立即运行 main.go 文件。适合快速测试和调试代码，因为它不会生成一个可执行文件，而是直接运行代码。

kill -9 `ps -ef | grep beeapi | grep -v grep | awk '{print $2}'` && nohup ./beeapi > beeapi.log 2>&1 &

去看日志： 
tail +F beeapi.log
tail -f /root/bee-api/bee-api/nohup.out
tail -f /root/bee-api/server/nohup.out


# 检查端口是否正常监听
netstat -tulpn | grep beeapi
netstat -lanp | grep :8081
# 停止当前服务
pkill -f beeapi



-----


cd /root/bee-api/server && go build -o server main.go
kill -9 `ps -ef | grep server | grep -v grep | awk '{print $2}'` && nohup ./server > server.log 2>&1 &
less +F server.log
tail +F server.log


netstat -tulpn | grep server
netstat -lanp | grep :18083

 127.0.0.1:18083         0.0.0.0:*               LISTEN      13213/./server
:::8888                                   LISTEN      13213/./server

pkill -f server


--------


下载更新并重新构建前端：


打包前端代码：
D:\progetti\coffee\bee-api-git\web

npm install

npm run build# 生产环境

powershell把打包出来的dist文件夹去替换/var/www/bee文件 
scp -r "D:\progetti\coffee\bee-api-git\web\dist\*" root@47.98.186.186:/var/www/bee/
Woshinibaba88!
# 检查文件是否上传成功
ls -la /var/www/bee/

# 重启 nginx（如果需要）
systemctl restart nginx

nginx -s reload

--------

cd /root/bee-api && git pull

服务器上传GitHub
git add .
git commit -m "Add new files"
git push origin main


2. 拉取最新的远程分支
在切换之前，先确保远程分支 shopid 存在：

git fetch --all
git branch -r  # 查看远程分支是否有 shopid

3. 切换到 shopid 分支

如果本地已经有 shopid 分支，直接切换：
git checkout shopid


丢弃更改（慎用）
如果这些日志文件是临时生成的，不需要保留：

git reset --hard   # 丢弃所有未提交的更改（不可恢复！）



git pull origin shopid

-------

MySQL 数据库服务:
systemctl status mysql
# 如果没有启动则
systemctl start MySQL


https://api.it120.cc

